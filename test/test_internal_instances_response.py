# coding: utf-8

"""
    Infrahub-API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from hyperstack.models.internal_instances_response import InternalInstancesResponse

class TestInternalInstancesResponse(unittest.TestCase):
    """InternalInstancesResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> InternalInstancesResponse:
        """Test InternalInstancesResponse
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `InternalInstancesResponse`
        """
        model = InternalInstancesResponse()
        if include_optional:
            return InternalInstancesResponse(
                status = True,
                message = '',
                instances = [
                    hyperstack.models.internal_instance_fields.InternalInstanceFields(
                        id = 56, 
                        name = '', 
                        openstack_id = '', 
                        status = '', 
                        environment = hyperstack.models.internal_environment_fields.InternalEnvironmentFields(
                            id = 56, 
                            name = '', 
                            region = '', 
                            created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), ), 
                        image = hyperstack.models.internal_instance_image_fields.InternalInstanceImageFields(
                            id = 56, 
                            name = '', 
                            region_name = '', 
                            type = '', 
                            version = '', ), 
                        flavor = hyperstack.models.internal_instance_flavor_fields.InternalInstanceFlavorFields(
                            id = 56, 
                            name = '', 
                            region_name = '', 
                            cpu = 56, 
                            ram = 56, 
                            disk = 56, 
                            gpu = '', 
                            gpu_count = 56, 
                            created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), ), 
                        keypair = hyperstack.models.internal_instance_keypair_fields.InternalInstanceKeypairFields(
                            id = 56, 
                            name = '', 
                            public_key = '', 
                            fingerprint = '', 
                            created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), ), 
                        volume_attachments = [
                            hyperstack.models.internal_volume_attachment_fields.InternalVolumeAttachmentFields(
                                volume = hyperstack.models.internal_volume_fields.InternalVolumeFields(
                                    id = 56, 
                                    name = '', 
                                    description = '', 
                                    volume_type = '', 
                                    size = '', ), 
                                status = '', 
                                device = '', 
                                created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                            ], 
                        boot_source = '', 
                        power_state = '', 
                        vm_state = '', 
                        fixed_ip = '', 
                        floating_ip = '', 
                        floating_ip_status = '', 
                        user_data = '', 
                        security_rules = [
                            hyperstack.models.internal_security_rules_fields_for_instance.InternalSecurityRulesFieldsForInstance(
                                id = 56, 
                                direction = '', 
                                protocol = '', 
                                port_range_min = 56, 
                                port_range_max = 56, 
                                ethertype = '', 
                                remote_ip_prefix = '', 
                                status = '', 
                                created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                            ], 
                        callback_url = '', 
                        created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                    ]
            )
        else:
            return InternalInstancesResponse(
        )
        """

    def testInternalInstancesResponse(self):
        """Test InternalInstancesResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
