# coding: utf-8

"""
    Infrahub-API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from hyperstack.models.organization_resource_list import OrganizationResourceList

class TestOrganizationResourceList(unittest.TestCase):
    """OrganizationResourceList unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> OrganizationResourceList:
        """Test OrganizationResourceList
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `OrganizationResourceList`
        """
        model = OrganizationResourceList()
        if include_optional:
            return OrganizationResourceList(
                status = True,
                message = '',
                organizations = [
                    hyperstack.models.organization_resources.OrganizationResources(
                        organization_id = 56, 
                        environments = [
                            hyperstack.models.envrionment_resources.EnvrionmentResources(
                                id = 56, 
                                name = '', 
                                region = '', 
                                instances = [
                                    hyperstack.models.instance_resources.InstanceResources(
                                        id = 56, 
                                        name = '', 
                                        host = '', 
                                        status = '', 
                                        flavor = hyperstack.models.flavor_resource.FlavorResource(
                                            id = 56, 
                                            name = '', 
                                            cpu = 56, 
                                            ram = 1.337, 
                                            disk = 56, 
                                            gpu = '', 
                                            gpu_count = 56, ), 
                                        image_id = 56, 
                                        volume_id = 56, 
                                        keypair_name = '', 
                                        fixed_ip = '', 
                                        floating_ip = '', 
                                        floating_ip_status = '', 
                                        created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                                    ], 
                                volumes = [
                                    hyperstack.models.volume_resource.VolumeResource(
                                        id = 56, 
                                        name = '', 
                                        type = '', 
                                        size = 56, 
                                        status = '', 
                                        bootable = True, 
                                        created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                                    ], 
                                containers = [
                                    hyperstack.models.container_resource.ContainerResource(
                                        id = 56, 
                                        name = '', 
                                        status = '', 
                                        image = '', 
                                        fixed_ip = '', 
                                        floating_ip = '', 
                                        created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                                    ], 
                                clusters = [
                                    hyperstack.models.cluster_resource.ClusterResource(
                                        id = 56, 
                                        name = '', 
                                        kubernetes_version = '', 
                                        status = '', 
                                        master_count = 56, 
                                        node_count = 56, 
                                        node_flavor = hyperstack.models.flavor_resource.FlavorResource(
                                            id = 56, 
                                            name = '', 
                                            cpu = 56, 
                                            ram = 1.337, 
                                            disk = 56, 
                                            gpu = '', 
                                            gpu_count = 56, ), 
                                        enable_public_ip = True, 
                                        created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                                    ], 
                                created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                            ], )
                    ]
            )
        else:
            return OrganizationResourceList(
        )
        """

    def testOrganizationResourceList(self):
        """Test OrganizationResourceList"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
