# coding: utf-8

"""
    Infrahub-API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from hyperstack.api.virtual_machine_api import VirtualMachineApi


class TestVirtualMachineApi(unittest.TestCase):
    """VirtualMachineApi unit test stubs"""

    def setUp(self) -> None:
        self.api = VirtualMachineApi()

    def tearDown(self) -> None:
        pass

    def test_add_firewall_rule_to_virtual_machine(self) -> None:
        """Test case for add_firewall_rule_to_virtual_machine

        Add firewall rule to virtual machine
        """
        pass

    def test_attach_firewalls_to_a_vm(self) -> None:
        """Test case for attach_firewalls_to_a_vm

        Attach Firewalls to a VM
        """
        pass

    def test_create_virtual_machine(self) -> None:
        """Test case for create_virtual_machine

        Create virtual machine
        """
        pass

    def test_delete_firewall_rule_from_virtual_machine(self) -> None:
        """Test case for delete_firewall_rule_from_virtual_machine

        Delete firewall rule from virtual machine
        """
        pass

    def test_delete_virtual_machine(self) -> None:
        """Test case for delete_virtual_machine

        Delete virtual machine
        """
        pass

    def test_edit_labels_of_an_existing_vm(self) -> None:
        """Test case for edit_labels_of_an_existing_vm

        Edit labels of an existing VM
        """
        pass

    def test_hard_reboot_virtual_machine(self) -> None:
        """Test case for hard_reboot_virtual_machine

        Hard reboot virtual machine
        """
        pass

    def test_hibernate_virtual_machine(self) -> None:
        """Test case for hibernate_virtual_machine

        Hibernate virtual machine
        """
        pass

    def test_list_virtual_machines(self) -> None:
        """Test case for list_virtual_machines

        List all virtual machines
        """
        pass

    def test_resize_virtual_machine(self) -> None:
        """Test case for resize_virtual_machine

        Resize virtual machine
        """
        pass

    def test_restore_virtual_machine_from_hibernation(self) -> None:
        """Test case for restore_virtual_machine_from_hibernation

        Restore virtual machine from hibernation
        """
        pass

    def test_retrieve_virtual_machine_details(self) -> None:
        """Test case for retrieve_virtual_machine_details

        Retrieve virtual machine details
        """
        pass

    def test_retrieve_virtual_machine_performance_metrics(self) -> None:
        """Test case for retrieve_virtual_machine_performance_metrics

        Retrieve virtual machine performance metrics
        """
        pass

    def test_retrieve_virtual_machines_associated_with_a_contract(self) -> None:
        """Test case for retrieve_virtual_machines_associated_with_a_contract

        Retrieve virtual machines associated with a contract
        """
        pass

    def test_start_virtual_machine(self) -> None:
        """Test case for start_virtual_machine

        Start virtual machine
        """
        pass

    def test_stop_virtual_machine(self) -> None:
        """Test case for stop_virtual_machine

        Stop virtual machine
        """
        pass


if __name__ == '__main__':
    unittest.main()
