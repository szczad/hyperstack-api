# coding: utf-8

"""
    Infrahub-API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from hyperstack.models.future_nodes_stock_model import FutureNodesStockModel

class TestFutureNodesStockModel(unittest.TestCase):
    """FutureNodesStockModel unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> FutureNodesStockModel:
        """Test FutureNodesStockModel
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `FutureNodesStockModel`
        """
        model = FutureNodesStockModel()
        if include_optional:
            return FutureNodesStockModel(
                future_stocks = [
                    hyperstack.models.future_node_response_model.FutureNodeResponseModel(
                        region = '', 
                        nodes = [
                            hyperstack.models.future_node_model.FutureNodeModel(
                                id = 56, 
                                openstack_name = '', 
                                nexgen_name = '', 
                                expected_provision_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                stocks = [
                                    hyperstack.models.future_node_stock_model.FutureNodeStockModel(
                                        id = 56, 
                                        name = '', 
                                        expected_amount = 56, )
                                    ], )
                            ], )
                    ]
            )
        else:
            return FutureNodesStockModel(
        )
        """

    def testFutureNodesStockModel(self):
        """Test FutureNodesStockModel"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
